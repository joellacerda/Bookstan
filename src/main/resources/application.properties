# src/main/resources/application.properties

# Ativa o perfil 'local' por padrão.
# Este perfil carregará as configurações de 'application-local.properties'.
# Para produção ou outros ambientes, esta linha pode ser removida ou sobrescrita.
spring.profiles.active=local
server.port=8080

spring.application.name=Bookstan

# H2 Database Configuration
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
#spring.datasource.url=jdbc:h2:mem:bookstandb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Hibernate/JPA Configuration for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.ddl-auto:
#  'create': Drop and re-create schema on startup. Perde todos os dados. Bom para início.
#  'update': Attempts to update the schema if it has changed. Cuidado em produção.
#  'validate': Validates the schema, does not make changes to the database.
#  'none': Does not do anything with the schema. Para produção quando se usa Flyway/Liquibase.
#  Para desenvolvimento inicial com PostgreSQL, 'update' ou 'create' podem ser usados.
#  Se você usou 'create' com H2 e quer que as tabelas sejam criadas no Postgres, use 'create' na primeira vez.
#  Depois pode mudar para 'update'.
spring.jpa.hibernate.ddl-auto=update

# Opcional: Mostra o SQL gerado pelo Hibernate (útil para debug)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true # Formata o SQL no log
